#include <stdio.h>

struct tree {
    char name[10];
    int yield;
    int growth_time;
    int yield_per_kg;
    int price_per_kg;
    char status[10];
};

int main() {
    int days = 30;
    int max_plantable_trees;
    int total_income = 0;

    struct tree trees[] = {
        {"apple", 400, 10, 5, 150, "unplanted"},
        {"orange", 280, 6, 7, 250, "unplanted"},
        {"mango", 2200, 15, 8, 100, "unplanted"},
        {"lemon", 1500, 5, 10, 50, "unplanted"},
        {"coconut", 75, 15, 15, 1600, "unplanted"}
    };

    // Calculate the maximum number of trees that can be planted for each type of tree
    for (int i = 0; i < 5; i++) {
        max_plantable_trees = (int) (0.4 * 100 / trees[i].yield);

        // Plant one tree of this type
        if (max_plantable_trees > 0) {
            trees[i].status = "planted";
            max_plantable_trees--;
        }

        // Plant additional trees of this type until the limit is reached
        while (max_plantable_trees > 0) {
            int max_yield = trees[i].yield * max_plantable_trees;
            int growth_cycles = days / trees[i].growth_time;
            int harvested_yield = growth_cycles * trees[i].yield;
            if (harvested_yield > max_yield) {
                harvested_yield = max_yield;
            }
            int income = harvested_yield / trees[i].yield_per_kg * trees[i].price_per_kg;

            // Select the tree that generates the maximum income
            if (income > max_income) {
                max_income = income;
                selected_tree = i;
            }

            max_plantable_trees--;
        }

        // Plant the selected tree and update the maximum plantable trees for this type of tree
        if (selected_tree != -1) {
            trees[selected_tree].status = "planted";
            max_plantable_trees = (int) (0.4 * 100 / trees[selected_tree].yield);
        }
        else {
            break;
        }
    }

    // Calculate the total income generated by harvesting and selling the yield for the given number of days
    for (int i = 0; i < 5; i++) {
        if (trees[i].status == "planted") {
            int growth_cycles = days / trees[i].growth_time;
            int harvested_yield = growth_cycles * trees[i].yield;
            int income = harvested_yield / trees[i].yield_per_kg * trees[i].price_per_kg;
            total_income += income;
        }
    }

    printf("Total income generated in %d days: ?%d\n", days, total_income);

    return 0;
}

